within Buildings.Electrical.AC.ThreePhasesBalanced.Loads.MotorDrive.InductionMotors.BaseClasses;
function computeElectricalParameters   "Function to compute electrical parameters of the induction machine"

  // Inputs
  input Real terminalTheta "Electrical angle in radians";
  input Real tau_e "Electromagnetic torque in Nm";
  input Real i_ds "Direct-axis stator current";
  input Real i_qs "Quadrature-axis stator current";
  input Real v[2] "Voltage vector (d-q components)";
  input Real N "Rotational speed (RPM)";
  input Real N_ref "Reference speed constant";

  // Outputs
  output Real theta_s "Phase angle";
  output Real omega "Angular velocity (rad/s)";
  output Real v_rms "Voltage RMS";
  output Real pow_gap "Power gap (W)";
  output Real i_rms "Current RMS";
  output Real i[2] "Current components (i_d, i_q)";

algorithm
  // Compute phase angle (Assuming PhaseSystem.thetaRef is replaced with terminalTheta)
  theta_s := terminalTheta;
  omega := der(theta_s); // Compute angular velocity

  // Compute voltage RMS
  v_rms := sqrt(v[1]^2 + v[2]^2);

  // Compute power gap (assuming speBlo.N is replaced with N)
  pow_gap := N / N_ref * tau_e;

  // Compute currents
  i[1] := (3/2) * i_ds;
  i[2] := i_qs;
  i_rms := sqrt(i[1]^2 + i[2]^2);

end computeElectricalParameters;
