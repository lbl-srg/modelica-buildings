#!/usr/bin/python
#####################################################################
# This script cleans up the html code generated by Dymola,
# and it adds the link to the style sheet
#
# MWetter@lbl.gov                                          2011-05-15
#####################################################################
import os, string, fnmatch, os.path, sys
from os import listdir
from os.path import isfile, join

def validateLine(line, filNam):
    # MathJax should be served using https, not http
    li = ['/tmp/', \
          'home/mwetter', \
          'dymola/Modelica', \
          '///opt/dymola', \
          'github/lbl-srg', \
          '<a href="http://www.3ds.com/">Automatically generated</a>', \
          'http://cdn.mathjax.org/mathjax/latest/MathJax.js']
    em = ""
    for s in li:
        if s in line:
            em += "*** Error: Invalid string '%s' in file '%s'.\n" % (s, filNam)
    if len(em) > 0:
        raise ValueError(em)
# --------------------------
# Global settings
LIBHOME=os.path.abspath(".")

helpDir=LIBHOME + os.path.sep + 'help'

files = [ f for f in listdir(helpDir) if f.endswith(".html") ]


##########################################
# Discover the link to the html page of the msl, such as in
# <p>Extends from <a href="file:////opt/dymola-2015FD01-x86_64-patch1/Modelica/Library/Modelica%203.2.1/help/Modelica_Icons_Package.html#Modelica.Icons.Package"
#                          -----------------------------------------------------------------------
# This is then used in the text replace below.
# The test file that we search
tesFil=os.path.join(LIBHOME, "help", "Buildings.html")
insLoc = None
with open(tesFil, 'r') as fil:
    lines = fil.readlines()
    for lin in lines:
        iSta = lin.find('Extends from <a href="file')
        if iSta > -1:
            s = "Library/"
            iEnd = lin.find(s) + len(s)
            # Get a string such as file:////opt/dymola-2015FD01-x86_64-patch1/Modelica/
            insLoc = lin[lin.find('href=')+6:iEnd]
            break

# Remove Library from a string such as file:////opt/dymola-2015FD01-x86_64-patch1/Modelica/Library
# and add help/ExternalObject instead of
repExtObj = insLoc[:len(insLoc)-len("Library")-1] + "help/ExternalObject"

replacements = {'font-family: Arial, sans-serif;': '',
               '</head>':
               '<link rel=\"stylesheet\" type=\"text/css\" charset=\"utf-8\" media=\"all\" href=\"../Resources/www/modelicaDoc.css\">\n</head>',
               '<body>':
               '<body>\n<!-- begin header -->\n<div id="navbar">\n    <img src="../Resources/www/lbl-logo.png" alt="LBL logo"/>\n    <ul><li><a href="http://simulationresearch.lbl.gov/modelica">Home</a> &gt; <a href="Buildings.html">Modelica</a></li></ul>\n</div>\n<!-- end header -->\n',
               '%s' % (insLoc):
               '../../msl/',
               repExtObj: insLoc + "ExternalObject/ExternalObject",
               '/home/mwetter/proj/ldrd/bie/modeling/github/lbl-srg/modelica-buildings/Buildings':
               '..',
               '<pre></pre>':''}
# Search for text such as
# <img alt="image" src="/tmp/postBuildingsTagToWeb.sh.25555/modelica-buildings-3.0.0-rc.1/Buildings/Resources/Images/UsersGuide/HydronicHeating.png" border="1"/>
# in order to update the link.
with open(tesFil, 'r') as fil:
    lines = fil.readlines()
    for lin in lines:
        iSta = lin.find('Resources/Images/UsersGuide')
        if iSta > -1:
            src_tag = 'src="'
            i_src = lin.find(src_tag)
            if i_src > -1:
                 # entry should be /tmp/postBuildingsTagToWeb.sh.25555/modelica-buildings-3.0.0-rc.1/Buildings
                entry = lin[i_src+len(src_tag):iSta]
                replacements[entry] = '../'
                break

# Substitute text
for fil in files:
    filNam = helpDir + os.path.sep + fil
    filObj=open(filNam, 'r')
    lines = filObj.readlines()
    filObj.close()
    for old, new in replacements.iteritems():
        for i in range(len(lines)):
            lines[i] = lines[i].replace(old, new)
    filObj=open(filNam, 'w')
    filObj.writelines(lines)
    filObj.close()

# Replace certain sections
for fil in files:
    filNam = helpDir + os.path.sep + fil
    filObj=open(filNam, 'r')
    lines = filObj.readlines()
    filObj.close()
    # Dymola writes
    # <address>
    # <a href="http://www.3ds.com/">Automatically generated</a> Thu Mar 17 16:10:41 2016.
    # </address>
    # This is bad as it gets diff for every file in the version control system.
    # Also, https://www.w3.org/TR/html5/sections.html#the-address-element says there should
    # be nothing else than an address information, i.e., no date.
    # Hence, we change this entry.
    found = False
    for iLin in range(len(lines)-2):
        if "<address>" in lines[iLin].strip() and "</address>" in lines[iLin+2].strip():
            lines[iLin+1] = "<a href=\"http://simulationresearch.lbl.gov/modelica\">http://simulationresearch.lbl.gov/modelica</a>"
            found = True
    if found:
        filObj=open(filNam, 'w')
        filObj.writelines(lines)
        filObj.close()

# Validate the new files
for fil in files:
    filNam = helpDir + os.path.sep + fil
    # Check if line contains a wrong string
    filObj=open(filNam, 'r')
    for lin in filObj.readlines():
        validateLine(lin, filNam)
    filObj.close()
