os: Linux
dist: focal

language: python

python:
  - "3.8"

branches:
  only:
    - master
    - /^maint_.*$/
    - release

cache:
  pip: true
  directories:
    - .git/lfs

notifications:
  email: false

git:
  depth: 10
  lfs_skip_smudge: true

services:
  - docker
  - xvfb

env:
  global:
    - BUILDINGSPY_VERSION=BuildingsPy@e52684deb8c2c2846faaa21c426999fecf3ad58f
    - OMC_VERSION=ubuntu-2004-omc:1.19.0_dev-613-gd6e04c0-1
    - OPTIMICA_VERSION=travis-ubuntu-1804-optimica:r26446
    - DYMOLA_VERSION=travis_ubuntu-2004_dymola:2022x-x86_64
    - ENERGYPLUS_VERSION=EnergyPlus-9.6.0-f420c06a69-Linux-Ubuntu20.04-x86_64
    - MODELICA_JSON_VERSION=6d950c3592fa021aa914ba4ff34a67cbb69962c6
    - MODELICA_JSON_HOME=${TRAVIS_BUILD_DIR}/modelica-json

  jobs:
    - TEST_ARG="make test-cdl-conformance"

before_install:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - if [[ "$TEST_ARG" == *test-dymola* || "$TEST_ARG" == *test-bestest* || "$TEST_ARG" == *spawn-portability* ]]; then
       docker pull "$DOCKER_USERNAME"/${DYMOLA_VERSION};
       cp Buildings/Resources/Scripts/travis/dymola/dymola $HOME/bin/;
    fi;
  - if [[ "$TEST_ARG" == *test-optimica* ]]; then
       docker pull "$DOCKER_USERNAME"/${OPTIMICA_VERSION};
       cp Buildings/Resources/Scripts/travis/optimica/jm_ipython.sh $HOME/bin/jm_ipython.sh;
    fi;
  - if [[ "$TEST_ARG" == *test-energyplus* ]]; then
      wget --no-verbose https://github.com/NREL/EnergyPlus/releases/download/v9.6.0/${ENERGYPLUS_VERSION}.tar.gz;
      tar xzf ${ENERGYPLUS_VERSION}.tar.gz;
      rm ${ENERGYPLUS_VERSION}.tar.gz;
      echo "Installed EnergyPlus in ${PWD}/${ENERGYPLUS_VERSION}";
    fi;
  - if [[ "$TEST_ARG" == *test-cdl-conformance* ]]; then
      wget --no-verbose https://github.com/lbl-srg/modelica-json/archive/${MODELICA_JSON_VERSION}.tar.gz;
      tar xzf ${MODELICA_JSON_VERSION}.tar.gz;
      rm ${MODELICA_JSON_VERSION}.tar.gz;
      mv modelica-json-${MODELICA_JSON_VERSION} ${MODELICA_JSON_HOME};
      cd ${MODELICA_JSON_HOME};
      make install-node-packages;
      make compile;
      cd -;
      echo "Installed modelica-json in ${MODELICA_JSON_HOME}";
    fi;
  - if [[ "$TEST_ARG" == *test-openmodelica* ]]; then
       docker pull "$DOCKER_USERNAME"/${OMC_VERSION};
       cp Buildings/Resources/Scripts/travis/omc/omc $HOME/bin/omc;
    fi;

# Install dependencies
# For sphinx, we need to install specific package versions, otherwise
# the html output may have small formatting differences which causes
# the test to fail
install:
  - git lfs pull
  - pip3 install --upgrade pip wheel
  - pip3 install --only-binary=numpy,scipy,matplotlib numpy==1.21.4 scipy==1.7.3 matplotlib==3.5.1
  - pip3 install git+https://github.com/lbl-srg/${BUILDINGSPY_VERSION}
  - if [[ "$TEST_ARG" == *test-energyplus* ]]; then
      export PATH=${PATH}:${TRAVIS_BUILD_DIR}/${ENERGYPLUS_VERSION};
      pip3 install pandas==1.3.5;
    fi;

# Execute tests
script:
  - (cd Buildings/Resources/Scripts/travis && travis_wait 90 $TEST_ARG)

after_failure:
  - |
    for ff in `find Buildings -maxdepth 1 -name '*.log'`; do
      echo "*** Content of $ff"
      cat $ff
      echo "*** End of $ff"
    done
