os: Linux
dist: bionic

language: python

python:
  - "3.6"

cache: pip

notifications:
  email: false

git:
  depth: 10

services:
  - docker
  - xvfb


addons:
  apt:
    sources:
    - sourceline: "deb http://build.openmodelica.org/apt bionic stable"
      key_url: "http://build.openmodelica.org/apt/openmodelica.asc"
    packages:
    - omc=1.16.1-1
    - omlib-modelica-3.2.3


env:
  global:
    - ENERGYPLUS_VERSION=EnergyPlus-9.3.0-baff08990c-Linux-x86_64
    - MODELICA_JSON_VERSION=6d950c3592fa021aa914ba4ff34a67cbb69962c6
    - MODELICA_JSON_HOME=${TRAVIS_BUILD_DIR}/modelica-json

  jobs:
    - TEST_ARG="make test-cdl-conformance"
    - TEST_ARG="make test-documentation test-experiment-setup test-autogenerated-files test-verify-files test-energyplus-validations"
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.{Air,Examples}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.{Air,Examples}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.{Air,Examples}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.ThermalZones.EnergyPlus\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.ThermalZones.EnergyPlus\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.ThermalZones.EnergyPlus\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.ThermalZones.Detailed.{BaseClasses,Constructions,Examples}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.ThermalZones.Detailed.{BaseClasses,Constructions,Examples}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.ThermalZones.Detailed.{BaseClasses,Constructions,Examples}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.ThermalZones.Detailed.Validation.BESTEST\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.ThermalZones.Detailed.Validation.BESTEST\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.ThermalZones.Detailed.Validation.BESTEST\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.ThermalZones.Detailed.Validation.{Initialization,LBNL_71T,TestConditionalConstructions}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.ThermalZones.Detailed.Validation.{Initialization,LBNL_71T,TestConditionalConstructions}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.ThermalZones.Detailed.Validation.{Initialization,LBNL_71T,TestConditionalConstructions}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.ThermalZones.Detailed.FLEXLAB\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.ThermalZones.Detailed.FLEXLAB\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.ThermalZones.Detailed.FLEXLAB\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.ThermalZones.ReducedOrder\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.ThermalZones.ReducedOrder\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.ThermalZones.ReducedOrder\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.{Applications,Experimental}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.{Applications,Experimental}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.{Applications,Experimental}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.Fluid.{Actuators,BaseClasses,Boilers,Chillers,CHPs,Delays}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.Fluid.{Actuators,BaseClasses,Boilers,Chillers,CHPs,Delays}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.Fluid.{Actuators,BaseClasses,Boilers,Chillers,CHPs,Delays}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.Fluid.{Examples,FMI,FixedResistances,Geothermal}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.Fluid.{Examples,FMI,FixedResistances,Geothermal}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.Fluid.{Examples,FMI,FixedResistances,Geothermal}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.Fluid.{HeatExchangers,HeatPumps,Interfaces}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.Fluid.{HeatExchangers,HeatPumps,Interfaces}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.Fluid.{HeatExchangers,HeatPumps,Interfaces}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.Fluid.{MassExchangers,MixingVolumes,Movers,Sensors,SolarCollectors,Sources,Storage,Utilities}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.Fluid.{MassExchangers,MixingVolumes,Movers,Sensors,SolarCollectors,Sources,Storage,Utilities}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.Fluid.{MassExchangers,MixingVolumes,Movers,Sensors,SolarCollectors,Sources,Storage,Utilities}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.Electrical\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.Electrical\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.Electrical\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.{Airflow,BoundaryConditions,Controls}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.{Airflow,BoundaryConditions,Controls}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.{Airflow,BoundaryConditions,Controls}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.HeatTransfer\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.HeatTransfer\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.HeatTransfer\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.{Obsolete.Controls,Occupants,Media}\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.{Obsolete.Controls,Occupants,Media}\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.{Obsolete.Controls,Occupants,Media}\""
    - TEST_ARG="make test-dymola    PACKAGE=\"Buildings.Utilities\""
    - TEST_ARG="make test-optimica  PACKAGE=\"Buildings.Utilities\""
    - TEST_ARG="make test-jmodelica PACKAGE=\"Buildings.Utilities\""
    - TEST_ARG="make test-omc"

before_install:
  - sudo apt-get -y install python3.6-minimal  # Provides /usr/bin/python3.6m
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - if [[ "$TEST_ARG" == *test-dymola* ]]; then
       docker pull "$DOCKER_USERNAME"/travis_ubuntu-1804_dymola:2021-x86_64;
       cp Buildings/Resources/Scripts/travis/dymola/dymola $HOME/bin/;
    fi;
  - if [[ "$TEST_ARG" == *test-optimica* ]]; then
       docker pull "$DOCKER_USERNAME"/travis-ubuntu-1804-optimica:r19089;
       cp Buildings/Resources/Scripts/travis/optimica/jm_ipython.sh $HOME/bin/jm_ipython.sh;
    fi;
  - if [[ "$TEST_ARG" == *test-jmodelica* ]]; then
       docker pull "$DOCKER_USERNAME"/ubuntu-1804_jmodelica_trunk;
       cp Buildings/Resources/Scripts/travis/jmodelica/jm_ipython.sh $HOME/bin/jm_ipython.sh;
    fi;
  - if [[ "$TEST_ARG" == *test-energyplus* ]]; then
      wget --no-verbose https://github.com/NREL/EnergyPlus/releases/download/v9.3.0/${ENERGYPLUS_VERSION}.tar.gz;
      tar xzf ${ENERGYPLUS_VERSION}.tar.gz;
      rm ${ENERGYPLUS_VERSION}.tar.gz;
      mv -v ${ENERGYPLUS_VERSION}/energyplus ${ENERGYPLUS_VERSION}/EnergyPlus;
      file ${ENERGYPLUS_VERSION}/EnergyPlus
      ls -l ${ENERGYPLUS_VERSION}
      echo "Installed EnergyPlus in ${PWD}/${ENERGYPLUS_VERSION}";
    fi;
  - if [[ "$TEST_ARG" == *test-cdl-conformance* ]]; then
      wget --no-verbose https://github.com/lbl-srg/modelica-json/archive/${MODELICA_JSON_VERSION}.tar.gz;
      tar xzf ${MODELICA_JSON_VERSION}.tar.gz;
      rm ${MODELICA_JSON_VERSION}.tar.gz;
      mv modelica-json-${MODELICA_JSON_VERSION} ${MODELICA_JSON_HOME};
      cd ${MODELICA_JSON_HOME};
      make install-node-packages;
      make compile;
      cd -;
      echo "Installed modelica-json in ${MODELICA_JSON_HOME}";
    fi;

# Install dependencies
# For sphinx, we need to install specific package versions, otherwise
# the html output may have small formatting differences which causes
# the test to fail
install:
  - pip3 install --upgrade pip setuptools wheel
  - pip3 install --only-binary=numpy,scipy,matplotlib numpy==1.13.3 scipy==0.19.1 matplotlib==2.1.0
  - if [[ "$TEST_ARG" == *test-documentation* ]]; then
      pip3 install sphinx==2.1.2 \
        sphinx-bootstrap-theme==0.7.1 \
        sphinxcontrib-bibtex==0.4.2 \
        sphinxcontrib-plantuml==0.17 \
        alabaster==0.7.12 \
        MarkupSafe==1.1.1 \
        Pygments==2.4.2 \
        snowballstemmer==1.9.0 \
        docutils==0.15.2 \
        Babel==2.7.0 \
        requests==2.22.0 \
        Jinja2==2.10.1 \
        latexcodec==1.0.7 \
        pybtex==0.22.2
        pybtex-docutils==0.2.1 \
        oset==0.1.3 \
        PyYAML==5.1.2;
    fi;
  - if [[ "$TEST_ARG" == *test-energyplus* ]]; then
      export PATH=${PATH}:${TRAVIS_BUILD_DIR}/${ENERGYPLUS_VERSION};
      pip3 install pandas==1.0.1;
    fi;
  - pip3 install git+https://github.com/lbl-srg/BuildingsPy@master

# Execute tests
script:
  - (cd Buildings/Resources/Scripts/travis && travis_wait 90 $TEST_ARG)

after_failure:
  - |
    for ff in `find Buildings -maxdepth 1 -name '*.log'`; do
      echo "*** Content of $ff"
      cat $ff
      echo "*** End of $ff"
    done
