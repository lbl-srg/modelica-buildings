{
  "within": "Buildings.Controls.OBC.CDL.Routing",
  "class_definition": [
    {
      "class_prefixes": "block",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "BooleanVectorFilter",
          "description_string": "Filter a boolean vector based on a boolean mask",
          "composition": {
            "element_list": [
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Integer",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "nin"
                      },
                      "description": {
                        "description_string": "Size of input vector"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Integer",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "nout"
                      },
                      "description": {
                        "description_string": "Size of output vector"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Boolean",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "msk",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "nin"
                            }
                          }
                        ],
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "function_call": {
                                "name": "fill",
                                "arguments": [
                                  {
                                    "name": "true"
                                  },
                                  {
                                    "name": "nin"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "description_string": "Array mask"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Buildings.Controls.OBC.CDL.Interfaces.BooleanInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "u",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "nin"
                            }
                          }
                        ]
                      },
                      "description": {
                        "description_string": "Input signals from which values are extracted",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -20
                                      },
                                      {
                                        "x": -100,
                                        "y": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Buildings.Controls.OBC.CDL.Interfaces.BooleanOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "y",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "nout"
                            }
                          }
                        ]
                      },
                      "description": {
                        "description_string": "Output with extracted input signals",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -20
                                      },
                                      {
                                        "x": 140,
                                        "y": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "protected_element_list": [
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Integer",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "mskId",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "nout"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "function_call": {
                                    "name": "Modelica.Math.BooleanVectors.index",
                                    "arguments": [
                                      {
                                        "name": "msk"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Indices of included element in input vector"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "equation_section": {
                  "initial": true,
                  "equation": [
                    {
                      "function_call_equation": {
                        "function_name": "assert",
                        "function_call_args": {
                          "function_argument": {
                            "expression": {
                              "simple_expression": {
                                "logical_expression": {
                                  "logical_or": [
                                    {
                                      "logical_and": [
                                        {
                                          "arithmetic_expressions": [
                                            {
                                              "name": "nout"
                                            },
                                            {
                                              "name": "sum({if msk[i] then 1 else 0 for i in 1:nin})"
                                            }
                                          ],
                                          "relation_operator": "=="
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "function_arguments": {
                            "function_argument": {
                              "expression": {
                                "simple_expression": "\"In \" +getInstanceName() +\": The size of the output vector does not\n    match the size of included elements in the mask.\""
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "equation_section": {
                  "equation": [
                    {
                      "assignment_equation": {
                        "lhs": "y",
                        "rhs": {
                          "simple_expression": "u[mskId]"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "defaultComponentName",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "\"booVecFil\""
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Icon",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "coordinateSystem": {
                                "preserveAspectRatio": "false"
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "graphics": [
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -100,
                                        "y": -100
                                      },
                                      {
                                        "x": 100,
                                        "y": 100
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 255,
                                      "g": 255,
                                      "b": 255
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -102,
                                        "y": 0
                                      },
                                      {
                                        "x": -60,
                                        "y": 0
                                      }
                                    ],
                                    "color": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": 70,
                                        "y": 0
                                      },
                                      {
                                        "x": 100,
                                        "y": 0
                                      }
                                    ],
                                    "color": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -150,
                                        "y": 110
                                      },
                                      {
                                        "x": 150,
                                        "y": 150
                                      }
                                    ],
                                    "textString": "\"%name\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                },
                                {
                                  "name": "Polygon",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -60,
                                        "y": 80
                                      },
                                      {
                                        "x": -60,
                                        "y": -80
                                      },
                                      {
                                        "x": 20,
                                        "y": -10
                                      },
                                      {
                                        "x": 60,
                                        "y": -10
                                      },
                                      {
                                        "x": 80,
                                        "y": 10
                                      },
                                      {
                                        "x": 20,
                                        "y": 10
                                      },
                                      {
                                        "x": -60,
                                        "y": 80
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "fillColor": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillPattern": "FillPattern.Solid",
                                    "lineThickness": 0.5
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Diagram",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "coordinateSystem": {
                                "preserveAspectRatio": "false"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nJune 22, 2021, by Baptiste Ravache:<br/>\nFirst implementation\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nThis block filters a Boolean vector of size <code>nin</code> to\na vector of size <code>nout</code> given a Boolean mask\n<code>msk</code>.\n</p>\n<p>\nIf an entry in <code>msk</code> is <code>true</code>, then the value\nof this input will be sent to the output <code>y</code>, otherwise it\nwill be discarded.\n</p>\n<p>\nThe parameter <code>msk</code> must have exactly <code>nout</code> entries\nset to <code>true</code>, otherwise an error message is issued.\n</p>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/Controls/OBC/CDL/Routing/BooleanVectorFilter.mo",
  "fullMoFilePath": "/home/reituag/gitrepo/modelica-buildings/Buildings/Controls/OBC/CDL/Routing/BooleanVectorFilter.mo",
  "checksum": "7d0e136c3e8cb6cc37c15692455a5a68"
}