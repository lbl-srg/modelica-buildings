{
  "within": "Buildings.Controls.OBC.CDL.Logical",
  "class_definition": [
    {
      "class_prefixes": "block",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "TrueFalseHold",
          "description_string": "Block that holds an output signal for at least a specified duration",
          "composition": {
            "element_list": [
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Real",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "trueHoldDuration",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"Time\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"s\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Duration of true hold",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Real",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "falseHoldDuration",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"Time\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"s\""
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": "trueHoldDuration"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Duration of false hold",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Buildings.Controls.OBC.CDL.Interfaces.BooleanInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "u"
                      },
                      "description": {
                        "description_string": "Input signal that is to be delayed",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -20
                                      },
                                      {
                                        "x": -100,
                                        "y": 20
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -20
                                      },
                                      {
                                        "x": -100,
                                        "y": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Buildings.Controls.OBC.CDL.Interfaces.BooleanOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "y"
                      },
                      "description": {
                        "description_string": "Output with delayed input signal",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -20
                                      },
                                      {
                                        "x": 140,
                                        "y": 20
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -20
                                      },
                                      {
                                        "x": 140,
                                        "y": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "protected_element_list": [
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Boolean",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "pre_u_start",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "false"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Value of pre(u) at initial time",
                            "annotation": [
                              {
                                "element_modification_or_replaceable": {
                                  "element_modification": {
                                    "name": "Evaluate",
                                    "modification": {
                                      "equal": true,
                                      "expression": {
                                        "simple_expression": "true"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Boolean",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "not_u",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "not u"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Opposite of u"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Boolean",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "not_y",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "not y"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Opposite of y"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "discrete",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "entryTimeTrue",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "quantity",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"Time\""
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "unit",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"s\""
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Time instant when true hold started"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "discrete",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "entryTimeFalse",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "quantity",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"Time\""
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "unit",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"s\""
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Time instant when false hold started"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "equation_section": {
                  "initial": true,
                  "equation": [
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "entryTimeTrue"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "-Modelica.Constants.inf"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "entryTimeFalse"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "-Modelica.Constants.inf"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "u"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "pre_u_start"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "not_u"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "not pre_u_start"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "y"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "u"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "not_y"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "not u"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "equation_section": {
                  "equation": [
                    {
                      "when_equation": [
                        {
                          "condition": {
                            "simple_expression": "initial()"
                          },
                          "then": [
                            {
                              "assignment_equation": {
                                "lhs": "y",
                                "rhs": {
                                  "simple_expression": "u"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "condition": {
                            "simple_expression": "{edge(u),edge(not_u)}"
                          },
                          "then": [
                            {
                              "assignment_equation": {
                                "lhs": "entryTimeTrue",
                                "rhs": {
                                  "if_expression": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": "y"
                                        },
                                        "then": {
                                          "simple_expression": "time"
                                        }
                                      }
                                    ],
                                    "else_expression": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "pre",
                                          "arguments": [
                                            {
                                              "name": "entryTimeTrue"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "condition": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "time"
                                          },
                                          {
                                            "name": "pre(entryTimeFalse) +falseHoldDuration"
                                          }
                                        ],
                                        "relation_operator": ">="
                                      },
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "time"
                                          },
                                          {
                                            "name": "pre(entryTimeTrue) +trueHoldDuration"
                                          }
                                        ],
                                        "relation_operator": ">="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "then": [
                            {
                              "assignment_equation": {
                                "lhs": "entryTimeFalse",
                                "rhs": {
                                  "if_expression": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": "not y"
                                        },
                                        "then": {
                                          "simple_expression": "time"
                                        }
                                      }
                                    ],
                                    "else_expression": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "pre",
                                          "arguments": [
                                            {
                                              "name": "entryTimeFalse"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "defaultComponentName",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "\"truFalHol\""
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Icon",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "graphics": [
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -100,
                                        "y": 100
                                      },
                                      {
                                        "x": 100,
                                        "y": -100
                                      }
                                    ],
                                    "borderPattern": "BorderPattern.Raised",
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "fillColor": {
                                      "r": 210,
                                      "g": 210,
                                      "b": 210
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -84,
                                        "y": 10
                                      },
                                      {
                                        "x": -50,
                                        "y": 10
                                      },
                                      {
                                        "x": -50,
                                        "y": 54
                                      },
                                      {
                                        "x": -18,
                                        "y": 54
                                      },
                                      {
                                        "x": -18,
                                        "y": 10
                                      },
                                      {
                                        "x": -18,
                                        "y": 10
                                      }
                                    ],
                                    "color": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -78,
                                        "y": -46
                                      },
                                      {
                                        "x": -48,
                                        "y": -46
                                      },
                                      {
                                        "x": -48,
                                        "y": -2
                                      },
                                      {
                                        "x": -24,
                                        "y": -2
                                      },
                                      {
                                        "x": -24,
                                        "y": -46
                                      },
                                      {
                                        "x": -24,
                                        "y": -46
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -24,
                                        "y": -46
                                      },
                                      {
                                        "x": 6,
                                        "y": -46
                                      },
                                      {
                                        "x": 6,
                                        "y": -2
                                      },
                                      {
                                        "x": 44,
                                        "y": -2
                                      },
                                      {
                                        "x": 44,
                                        "y": -46
                                      },
                                      {
                                        "x": 74,
                                        "y": -46
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -18,
                                        "y": 10
                                      },
                                      {
                                        "x": 14,
                                        "y": 10
                                      },
                                      {
                                        "x": 14,
                                        "y": 54
                                      },
                                      {
                                        "x": 46,
                                        "y": 54
                                      },
                                      {
                                        "x": 46,
                                        "y": 10
                                      },
                                      {
                                        "x": 66,
                                        "y": 10
                                      }
                                    ],
                                    "color": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -150,
                                        "y": 150
                                      },
                                      {
                                        "x": 150,
                                        "y": 110
                                      }
                                    ],
                                    "textString": "\"%name\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -88,
                                        "y": -62
                                      },
                                      {
                                        "x": 92,
                                        "y": -90
                                      }
                                    ],
                                    "textString": "\"%falseHoldDuration\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                },
                                {
                                  "name": "Ellipse",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 71,
                                        "y": 7
                                      },
                                      {
                                        "x": 85,
                                        "y": -7
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 235,
                                      "g": 235,
                                      "b": null
                                    },
                                    "fillColor": {
                                      "r": 235,
                                      "g": 235,
                                      "b": null
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Ellipse",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -83,
                                        "y": 7
                                      },
                                      {
                                        "x": -69,
                                        "y": -7
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 235,
                                      "g": 235,
                                      "b": null
                                    },
                                    "fillColor": {
                                      "r": 235,
                                      "g": 235,
                                      "b": null
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -90,
                                        "y": 96
                                      },
                                      {
                                        "x": 96,
                                        "y": 68
                                      }
                                    ],
                                    "textString": "\"%trueHoldDuration\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Diagram",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "coordinateSystem": {
                                "preserveAspectRatio": "false"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nBlock that holds a <code>true</code> or <code>false</code> signal for at least a defined time period.\n</p>\n<p>\nWhenever the input <code>u</code> switches to true (resp. false),\nthe output <code>y</code> switches and remains true for at least\nthe duration specified by the parameter <code>trueHoldDuration</code>\n(resp. <code>falseHoldDuration</code>).\nAfter this duration has elapsed, the output will be <code>y = u</code>.\n</p>\n<p>\nThis block could for example be used to disable an economizer,\nand not re-enable it for <i>10</i>&nbsp;min, and vice versa.\n</p>\n<p>\nSimulation results of a typical example with <code>trueHoldDuration = falseHoldDuration = 1000</code>&nbsp;s.\n</p>\n<p align=\\\"center\\\">\n<img src=\\\"modelica://Buildings/Resources/Images/Controls/OBC/CDL/Logical/TrueFalseHold.png\\\"\nalt=\\\"Input and output of the block\\\"/>\n</p>\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nAugust 26, 2024, by Antoine Gautier:<br/>\nResolved an issue with unit impulse signals.<br/>\nThis is for\n<a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/3966\\\">issue 3966</a>.\n</li>\n<li>\nJune 13, 2024, by Antoine Gautier:<br/>\nRefactored with synchronous language elements.<br/>\nThis is for\n<a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/3787\\\">issue 3787</a>.\n</li>\n<li>\nNovember 12, 2020, by Michael Wetter:<br/>\nReformulated to remove dependency to <code>Modelica.Units.SI</code>.<br/>\nThis is for\n<a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/2243\\\">issue 2243</a>.\n</li>\n<li>\nSeptember 18, 2017, by Michael Wetter:<br/>\nImproved event handling.\n</li>\n<li>\nJuly 14, 2017, by Michael Wetter:<br/>\nCorrected model to set output equal to input during initialization.\n</li>\n<li>\nJune 13, 2017, by Michael Wetter:<br/>\nReimplemented model using a state graph to avoid having to test for equality within tolerance,\nand to correct a bug.\nThis implementation is also easier to understand.<br/>\nThis is for\n<a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/789\\\">issue 789</a>.\n</li>\n<li>\nMay 24, 2017, by Milica Grahovac:<br/>\nFirst implementation.\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/Controls/OBC/CDL/Logical/TrueFalseHold.mo",
  "fullMoFilePath": "/home/reituag/gitrepo/modelica-buildings/Buildings/Controls/OBC/CDL/Logical/TrueFalseHold.mo",
  "checksum": "7b2bb9bd5f31f064febeeae964f011df"
}