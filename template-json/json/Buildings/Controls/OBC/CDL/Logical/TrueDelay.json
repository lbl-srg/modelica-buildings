{
  "within": "Buildings.Controls.OBC.CDL.Logical",
  "class_definition": [
    {
      "class_prefixes": "block",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "TrueDelay",
          "description_string": "Delay a rising edge of the input, but do not delay a falling edge",
          "composition": {
            "element_list": [
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Real",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "delayTime",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"Time\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"s\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Delay time"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Boolean",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "delayOnInit",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "false"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Set to true to delay initial true input"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Buildings.Controls.OBC.CDL.Interfaces.BooleanInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "u"
                      },
                      "description": {
                        "description_string": "Input signal to be delayed when it switches to true",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -20
                                      },
                                      {
                                        "x": -100,
                                        "y": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Buildings.Controls.OBC.CDL.Interfaces.BooleanOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "y"
                      },
                      "description": {
                        "description_string": "Output with delayed input signal after it switched to true",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -20
                                      },
                                      {
                                        "x": 140,
                                        "y": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "protected_element_list": [
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "t_past",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "quantity",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"Time\""
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "unit",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"s\""
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "element_modification_or_replaceable": {
                                    "element_modification": {
                                      "name": "fixed",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "false"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Time before simulation started"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "t_next",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "quantity",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"Time\""
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "unit",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"s\""
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Next event time"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "equation_section": {
                  "initial": true,
                  "equation": [
                    {
                      "assignment_equation": {
                        "lhs": "t_past",
                        "rhs": {
                          "simple_expression": "time -1000"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "u"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "false"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "t_next"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "time -1000"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "equation_section": {
                  "equation": [
                    {
                      "when_equation": [
                        {
                          "condition": {
                            "simple_expression": "initial()"
                          },
                          "then": [
                            {
                              "assignment_equation": {
                                "lhs": "t_next",
                                "rhs": {
                                  "if_expression": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": "not delayOnInit"
                                        },
                                        "then": {
                                          "simple_expression": "t_past"
                                        }
                                      }
                                    ],
                                    "else_expression": {
                                      "simple_expression": "time +delayTime"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "condition": {
                            "simple_expression": "u"
                          },
                          "then": [
                            {
                              "assignment_equation": {
                                "lhs": "y",
                                "rhs": {
                                  "if_expression": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": "not ([object Object])"
                                        },
                                        "then": {
                                          "simple_expression": "u"
                                        }
                                      }
                                    ],
                                    "else_expression": {
                                      "simple_expression": "false"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "condition": {
                            "simple_expression": "not u"
                          },
                          "then": [
                            {
                              "assignment_equation": {
                                "lhs": "t_next",
                                "rhs": {
                                  "simple_expression": "time +delayTime"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "condition": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "time"
                                          },
                                          {
                                            "name": "pre(t_next)"
                                          }
                                        ],
                                        "relation_operator": ">="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "then": [
                            {
                              "assignment_equation": {
                                "lhs": "y",
                                "rhs": {
                                  "if_expression": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": {
                                            "logical_expression": {
                                              "logical_or": [
                                                {
                                                  "logical_and": [
                                                    {
                                                      "arithmetic_expressions": [
                                                        {
                                                          "name": "delayTime"
                                                        },
                                                        {
                                                          "name": "0"
                                                        }
                                                      ],
                                                      "relation_operator": ">"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "then": {
                                          "simple_expression": "false"
                                        }
                                      }
                                    ],
                                    "else_expression": {
                                      "simple_expression": "true"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "defaultComponentName",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "\"truDel\""
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Icon",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "graphics": [
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -100,
                                        "y": 100
                                      },
                                      {
                                        "x": 100,
                                        "y": -100
                                      }
                                    ],
                                    "borderPattern": "BorderPattern.Raised",
                                    "fillColor": {
                                      "r": 210,
                                      "g": 210,
                                      "b": 210
                                    },
                                    "fillPattern": "FillPattern.Solid",
                                    "lineThickness": 5
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -250,
                                        "y": -120
                                      },
                                      {
                                        "x": 250,
                                        "y": -150
                                      }
                                    ],
                                    "textString": "\"%delayTime\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    }
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -80,
                                        "y": -66
                                      },
                                      {
                                        "x": -60,
                                        "y": -66
                                      },
                                      {
                                        "x": -60,
                                        "y": -22
                                      },
                                      {
                                        "x": 38,
                                        "y": -22
                                      },
                                      {
                                        "x": 38,
                                        "y": -66
                                      },
                                      {
                                        "x": 66,
                                        "y": -66
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -80,
                                        "y": 32
                                      },
                                      {
                                        "x": -4,
                                        "y": 32
                                      },
                                      {
                                        "x": -4,
                                        "y": 76
                                      },
                                      {
                                        "x": 38,
                                        "y": 76
                                      },
                                      {
                                        "x": 38,
                                        "y": 32
                                      },
                                      {
                                        "x": 66,
                                        "y": 32
                                      }
                                    ],
                                    "color": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                },
                                {
                                  "name": "Ellipse",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -71,
                                        "y": 7
                                      },
                                      {
                                        "x": -85,
                                        "y": -7
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 235,
                                      "g": 235,
                                      "b": null
                                    },
                                    "fillColor": {
                                      "r": 235,
                                      "g": 235,
                                      "b": null
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Ellipse",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 71,
                                        "y": 7
                                      },
                                      {
                                        "x": 85,
                                        "y": -7
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 235,
                                      "g": 235,
                                      "b": null
                                    },
                                    "fillColor": {
                                      "r": 235,
                                      "g": 235,
                                      "b": null
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -150,
                                        "y": 150
                                      },
                                      {
                                        "x": 150,
                                        "y": 110
                                      }
                                    ],
                                    "textString": "\"%name\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nBlock that delays a signal when it becomes <code>true</code>.\n</p>\n<p>\nA rising edge of the Boolean input <code>u</code> gives a delayed output.\nA falling edge of the input is immediately given to the output. If\n<code>delayOnInit = true</code>, then a <code>true</code> input signal\nat the start time is also delayed, otherwise the input signal is\nproduced immediately at the output.\n</p>\n<p>\nSimulation results of a typical example with a delay time of <i>0.1</i> second\nis shown below.\n</p>\n<p align=\\\"center\\\">\n<img src=\\\"modelica://Buildings/Resources/Images/Controls/OBC/CDL/Logical/TrueDelay1.png\\\"\n     alt=\\\"OnDelay1.png\\\" />\n<br/>\n<img src=\\\"modelica://Buildings/Resources/Images/Controls/OBC/CDL/Logical/TrueDelay2.png\\\"\n     alt=\\\"OnDelay2.png\\\" />\n</p>\n\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nNovember 12, 2020, by Michael Wetter:<br/>\nReformulated to remove dependency to <code>Modelica.Units.SI</code>.<br/>\nThis is for\n<a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/2243\\\">issue 2243</a>.\n</li>\n<li>\nFebruary 11, 2019, by Milica Grahovac:<br/>\nAdded boolean input to enable delay of an initial true input.\n</li>\n<li>\nJanuary 3, 2017, by Michael Wetter:<br/>\nFirst implementation, based on the implementation of the\nModelica Standard Library.\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/Controls/OBC/CDL/Logical/TrueDelay.mo",
  "fullMoFilePath": "/home/reituag/gitrepo/modelica-buildings/Buildings/Controls/OBC/CDL/Logical/TrueDelay.mo",
  "checksum": "280d9cd261bc8e91320e5439720f3d8c"
}