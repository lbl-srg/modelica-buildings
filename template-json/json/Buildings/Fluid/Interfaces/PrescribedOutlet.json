{
  "within": "Buildings.Fluid.Interfaces",
  "class_definition": [
    {
      "class_prefixes": "model",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "PrescribedOutlet",
          "description_string": "Component that assigns the outlet fluid property at port_a based on an input signal",
          "composition": {
            "element_list": [
              {
                "extends_clause": {
                  "name": "Buildings.Fluid.Interfaces.PartialTwoPortInterface"
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.HeatFlowRate",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "QMax_flow",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": "Modelica.Constants.inf"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Maximum heat flow rate for heating (positive)",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "enable",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "use_TSet"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.HeatFlowRate",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "QMin_flow",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "max",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": "-Modelica.Constants.inf"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Maximum heat flow rate for cooling (negative)",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "enable",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "use_TSet"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.MassFlowRate",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "mWatMax_flow",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": "Modelica.Constants.inf"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Maximum water mass flow rate addition (positive)",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "enable",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "use_X_wSet"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.MassFlowRate",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "mWatMin_flow",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "max",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": "-Modelica.Constants.inf"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Maximum water mass flow rate removal (negative)",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "enable",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "use_X_wSet"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.Time",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "tau",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": "10"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Time constant at nominal flow rate (used if energyDynamics not equal Modelica.Fluid.Types.Dynamics.SteadyState)",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "tab",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Dynamics\""
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.Temperature",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "T_start",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "Medium.T_default"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Start value of temperature",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "tab",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Initialization\""
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "enable",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "use_TSet"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.MassFraction",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "X_start",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "Medium.nX"
                            }
                          }
                        ],
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "Medium.X_default"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Start value of mass fractions m_i/m",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "tab",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Initialization\""
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "enable",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": {
                                                "logical_expression": {
                                                  "logical_or": [
                                                    {
                                                      "logical_and": [
                                                        {
                                                          "arithmetic_expressions": [
                                                            {
                                                              "name": "Medium.nXi"
                                                            },
                                                            {
                                                              "name": "0"
                                                            }
                                                          ],
                                                          "relation_operator": ">"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Fluid.Types.Dynamics",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "energyDynamics",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "Modelica.Fluid.Types.Dynamics.SteadyState"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Type of energy balance: dynamic (3 initialization options) or steady state",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "tab",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Dynamics\""
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "group",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Conservation equations\""
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "enable",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "use_TSet"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Boolean",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "use_TSet",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "true"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Set to false to disable temperature set point",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Boolean",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "use_X_wSet",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "true"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Set to false to disable water vapor set point",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "TSet",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"K\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "displayUnit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"degC\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "condition_attribute": {
                        "expression": {
                          "simple_expression": "use_TSet"
                        }
                      },
                      "description": {
                        "description_string": "Set point temperature of the fluid that leaves port_b",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "origin": {
                                      "x": -120,
                                      "y": 90
                                    },
                                    "extent": [
                                      {
                                        "x": 20,
                                        "y": -20
                                      },
                                      {
                                        "x": -20,
                                        "y": 20
                                      }
                                    ],
                                    "rotation": 180
                                  },
                                  "iconTransformation": {
                                    "origin": {
                                      "x": -110,
                                      "y": 80
                                    },
                                    "extent": [
                                      {
                                        "x": 10,
                                        "y": -10
                                      },
                                      {
                                        "x": -10,
                                        "y": 10
                                      }
                                    ],
                                    "rotation": 180
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "X_wSet",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"1\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "condition_attribute": {
                        "expression": {
                          "simple_expression": "use_X_wSet"
                        }
                      },
                      "description": {
                        "description_string": "Set point for water vapor mass fraction of the fluid that leaves port_b",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "origin": {
                                      "x": -120,
                                      "y": 50
                                    },
                                    "extent": [
                                      {
                                        "x": 20,
                                        "y": -20
                                      },
                                      {
                                        "x": -20,
                                        "y": 20
                                      }
                                    ],
                                    "rotation": 180
                                  },
                                  "iconTransformation": {
                                    "origin": {
                                      "x": -110,
                                      "y": 40
                                    },
                                    "extent": [
                                      {
                                        "x": 10,
                                        "y": -10
                                      },
                                      {
                                        "x": -10,
                                        "y": 10
                                      }
                                    ],
                                    "rotation": 180
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "Q_flow",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"W\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Heat flow rate added to the fluid (if flow is from port_a to port_b)",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": 70
                                      },
                                      {
                                        "x": 120,
                                        "y": 90
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "mWat_flow",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"kg/s\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Water vapor mass flow rate added to the fluid (if flow is from port_a to port_b)",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": 30
                                      },
                                      {
                                        "x": 120,
                                        "y": 50
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "protected_element_list": [
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Modelica.Units.SI.SpecificHeatCapacity",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "cp_default",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "function_call": {
                                    "name": "Medium.specificHeatCapacityCp",
                                    "arguments": [
                                      {
                                        "name": "Medium.setState_pTX(p=Medium.p_default,T=Medium.T_default,X=Medium.X_default)"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Specific heat capacity at default medium state"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Boolean",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "restrictHeat",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "QMax_flow"
                                              },
                                              {
                                                "name": "Modelica.Constants.inf/10"
                                              }
                                            ],
                                            "relation_operator": "<"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Flag, true if maximum heating power is restricted",
                            "annotation": [
                              {
                                "element_modification_or_replaceable": {
                                  "element_modification": {
                                    "name": "Evaluate",
                                    "modification": {
                                      "equal": true,
                                      "expression": {
                                        "simple_expression": "true"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Boolean",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "restrictCool",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "QMin_flow"
                                              },
                                              {
                                                "name": "-Modelica.Constants.inf/10"
                                              }
                                            ],
                                            "relation_operator": ">"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Flag, true if maximum cooling power is restricted",
                            "annotation": [
                              {
                                "element_modification_or_replaceable": {
                                  "element_modification": {
                                    "name": "Evaluate",
                                    "modification": {
                                      "equal": true,
                                      "expression": {
                                        "simple_expression": "true"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Boolean",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "restrictHumi",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "mWatMax_flow"
                                              },
                                              {
                                                "name": "Modelica.Constants.inf/10"
                                              }
                                            ],
                                            "relation_operator": "<"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Flag, true if maximum humidification is restricted",
                            "annotation": [
                              {
                                "element_modification_or_replaceable": {
                                  "element_modification": {
                                    "name": "Evaluate",
                                    "modification": {
                                      "equal": true,
                                      "expression": {
                                        "simple_expression": "true"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Boolean",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "restrictDehu",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "mWatMin_flow"
                                              },
                                              {
                                                "name": "-Modelica.Constants.inf/10"
                                              }
                                            ],
                                            "relation_operator": ">"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Flag, true if maximum dehumidification is restricted",
                            "annotation": [
                              {
                                "element_modification_or_replaceable": {
                                  "element_modification": {
                                    "name": "Evaluate",
                                    "modification": {
                                      "equal": true,
                                      "expression": {
                                        "simple_expression": "true"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Modelica.Units.SI.SpecificEnthalpy",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "deltaH",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "cp_default*0.000001"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Small value for deltaH used for regularization"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Modelica.Units.SI.MassFraction",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "deltaXi",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "0.000001"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Small mass fraction used for regularization"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Units.SI.MassFlowRate",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "m_flow_pos"
                          },
                          "description": {
                            "description_string": "Mass flow rate, or zero if reverse flow"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Units.SI.MassFlowRate",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "m_flow_non_zero"
                          },
                          "description": {
                            "description_string": "Mass flow rate bounded away from zero"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Units.SI.SpecificEnthalpy",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "hSet"
                          },
                          "description": {
                            "description_string": "Set point for enthalpy leaving port_b"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Units.SI.Temperature",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "T"
                          },
                          "description": {
                            "description_string": "Temperature of outlet state assuming unlimited capacity and taking dynamics into account"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Units.SI.MassFraction",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "Xi"
                          },
                          "description": {
                            "description_string": "Water vapor mass fraction of outlet state assuming unlimited capacity and taking dynamics into account"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Units.SI.MassFraction",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "Xi_instream",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "Medium.nXi"
                                }
                              }
                            ]
                          },
                          "description": {
                            "description_string": "Instreaming water vapor mass fraction at port_a"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Units.SI.MassFraction",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "Xi_outflow"
                          },
                          "description": {
                            "description_string": "Outstreaming water vapor mass fraction at port_a"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Units.SI.SpecificEnthalpy",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "dhAct"
                          },
                          "description": {
                            "description_string": "Actual enthalpy difference from port_a to port_b"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "dXiAct",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "unit",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"1\""
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Actual mass fraction difference from port_a to port_b"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "k",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "element_modification": {
                                      "name": "start",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "1"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Gain to take flow rate into account for sensor time constant"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "mNor_flow"
                          },
                          "description": {
                            "description_string": "Normalized mass flow rate"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "TSet_internal",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "element_modification": {
                                      "name": "unit",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"K\""
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "element_modification_or_replaceable": {
                                    "element_modification": {
                                      "name": "displayUnit",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"degC\""
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Internal connector for set point temperature of the fluid that leaves port_b"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "X_wSet_internal",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "element_modification": {
                                      "name": "unit",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"1\""
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Internal connector for set point for water vapor mass fraction of the fluid that leaves port_b"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "equation_section": {
                  "initial": true,
                  "equation": [
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "use_TSet"
                            },
                            "then": [
                              {
                                "equation": {
                                  "if_equation": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": {
                                            "logical_expression": {
                                              "logical_or": [
                                                {
                                                  "logical_and": [
                                                    {
                                                      "arithmetic_expressions": [
                                                        {
                                                          "name": "energyDynamics"
                                                        },
                                                        {
                                                          "name": "Modelica.Fluid.Types.Dynamics.SteadyStateInitial"
                                                        }
                                                      ],
                                                      "relation_operator": "=="
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "der(T)",
                                                "rhs": {
                                                  "simple_expression": "0"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "condition": {
                                          "simple_expression": {
                                            "logical_expression": {
                                              "logical_or": [
                                                {
                                                  "logical_and": [
                                                    {
                                                      "arithmetic_expressions": [
                                                        {
                                                          "name": "energyDynamics"
                                                        },
                                                        {
                                                          "name": "Modelica.Fluid.Types.Dynamics.FixedInitial"
                                                        }
                                                      ],
                                                      "relation_operator": "=="
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "T",
                                                "rhs": {
                                                  "simple_expression": "T_start"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "use_X_wSet"
                            },
                            "then": [
                              {
                                "equation": {
                                  "if_equation": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": {
                                            "logical_expression": {
                                              "logical_or": [
                                                {
                                                  "logical_and": [
                                                    {
                                                      "arithmetic_expressions": [
                                                        {
                                                          "name": "energyDynamics"
                                                        },
                                                        {
                                                          "name": "Modelica.Fluid.Types.Dynamics.SteadyStateInitial"
                                                        }
                                                      ],
                                                      "relation_operator": "=="
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "der(Xi)",
                                                "rhs": {
                                                  "simple_expression": "0"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "condition": {
                                          "simple_expression": {
                                            "logical_expression": {
                                              "logical_or": [
                                                {
                                                  "logical_and": [
                                                    {
                                                      "arithmetic_expressions": [
                                                        {
                                                          "name": "energyDynamics"
                                                        },
                                                        {
                                                          "name": "Modelica.Fluid.Types.Dynamics.FixedInitial"
                                                        }
                                                      ],
                                                      "relation_operator": "=="
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "Xi",
                                                "rhs": {
                                                  "simple_expression": "X_start[1]"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "function_call_equation": {
                        "function_name": "assert",
                        "function_call_args": {
                          "function_argument": {
                            "expression": {
                              "simple_expression": {
                                "logical_expression": {
                                  "logical_or": [
                                    {
                                      "logical_and": [
                                        {
                                          "arithmetic_expressions": [
                                            {
                                              "name": "tau"
                                            },
                                            {
                                              "name": "Modelica.Constants.eps"
                                            }
                                          ],
                                          "relation_operator": ">"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "function_arguments": {
                            "function_argument": {
                              "expression": {
                                "simple_expression": "\"The parameter tau, or the volume of the model from which tau may be derived, is unreasonably small.\n You need to set energyDynamics == Modelica.Fluid.Types.Dynamics.SteadyState to model steady-state.\n Received tau = \" +String(tau) +\"\\n\""
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "use_X_wSet"
                            },
                            "then": [
                              {
                                "equation": {
                                  "function_call_equation": {
                                    "function_name": "assert",
                                    "function_call_args": {
                                      "function_argument": {
                                        "expression": {
                                          "simple_expression": {
                                            "logical_expression": {
                                              "logical_or": [
                                                {
                                                  "logical_and": [
                                                    {
                                                      "arithmetic_expressions": [
                                                        {
                                                          "name": "Medium.nX"
                                                        },
                                                        {
                                                          "name": "1"
                                                        }
                                                      ],
                                                      "relation_operator": ">"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "function_arguments": {
                                        "function_argument": {
                                          "expression": {
                                            "simple_expression": "\"If use_X_wSet = true, require a medium with water vapor, such as Buildings.Media.Air\""
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "equation_section": {
                  "equation": [
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "not use_TSet"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "TSet_internal",
                                    "rhs": {
                                      "simple_expression": "293.15"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "connect_clause": {
                        "from": [
                          {
                            "dot_op": false,
                            "identifier": "TSet"
                          }
                        ],
                        "to": [
                          {
                            "dot_op": false,
                            "identifier": "TSet_internal"
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "not use_X_wSet"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "X_wSet_internal",
                                    "rhs": {
                                      "simple_expression": "0.01"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "connect_clause": {
                        "from": [
                          {
                            "dot_op": false,
                            "identifier": "X_wSet"
                          }
                        ],
                        "to": [
                          {
                            "dot_op": false,
                            "identifier": "X_wSet_internal"
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "([object Object])"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "mNor_flow",
                                    "rhs": {
                                      "simple_expression": "port_a.m_flow/m_flow_nominal"
                                    }
                                  }
                                }
                              },
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "k",
                                    "rhs": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "Modelica.Fluid.Utilities.regStep",
                                          "arguments": [
                                            {
                                              "name": "x=port_a.m_flow,y1=mNor_flow,y2=-mNor_flow,x_small=m_flow_small"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "mNor_flow",
                              "rhs": {
                                "simple_expression": "1"
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "k",
                              "rhs": {
                                "simple_expression": "1"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": {
                                "logical_expression": {
                                  "logical_or": [
                                    {
                                      "logical_and": [
                                        {
                                          "arithmetic_expressions": [
                                            {
                                              "name": "energyDynamics"
                                            },
                                            {
                                              "name": "Modelica.Fluid.Types.Dynamics.SteadyState"
                                            }
                                          ],
                                          "relation_operator": "<>"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "der(T)",
                                    "rhs": {
                                      "simple_expression": "(TSet_internal -T)*k/tau"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "T",
                              "rhs": {
                                "simple_expression": "TSet_internal"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": {
                                "logical_expression": {
                                  "logical_or": [
                                    {
                                      "logical_and": [
                                        {
                                          "arithmetic_expressions": [
                                            {
                                              "name": "energyDynamics"
                                            },
                                            {
                                              "name": "Modelica.Fluid.Types.Dynamics.SteadyState"
                                            }
                                          ],
                                          "relation_operator": "<>"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "der(Xi)",
                                    "rhs": {
                                      "simple_expression": "(X_wSet_internal -Xi)*k/tau"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "Xi",
                              "rhs": {
                                "simple_expression": "X_wSet_internal"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "Xi_instream",
                        "rhs": {
                          "simple_expression": {
                            "function_call": {
                              "name": "inStream",
                              "arguments": [
                                {
                                  "name": "port_a.Xi_outflow"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "hSet",
                        "rhs": {
                          "if_expression": {
                            "if_elseif": [
                              {
                                "condition": {
                                  "simple_expression": "use_TSet"
                                },
                                "then": {
                                  "simple_expression": {
                                    "function_call": {
                                      "name": "Medium.specificEnthalpy",
                                      "arguments": [
                                        {
                                          "name": "Medium.setState_pTX(p=port_a.p,T=T,X=Xi_instream +fill(dXiAct,Medium.nXi))"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ],
                            "else_expression": {
                              "simple_expression": "Medium.h_default"
                            }
                          }
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "m_flow_pos",
                        "rhs": {
                          "simple_expression": {
                            "function_call": {
                              "name": "Buildings.Utilities.Math.Functions.smoothMax",
                              "arguments": [
                                {
                                  "name": "x1=m_flow,x2=0,deltaX=m_flow_small"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "not restrictHeat and not restrictCool and not restrictHumi and not restrictDehu"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "m_flow_non_zero",
                                    "rhs": {
                                      "simple_expression": "Modelica.Constants.eps"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "m_flow_non_zero",
                              "rhs": {
                                "simple_expression": {
                                  "function_call": {
                                    "name": "Buildings.Utilities.Math.Functions.smoothMax",
                                    "arguments": [
                                      {
                                        "name": "x1=port_a.m_flow,x2=m_flow_small,deltaX=m_flow_small/2"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "use_X_wSet"
                            },
                            "then": [
                              {
                                "equation": {
                                  "if_equation": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": "not restrictHumi and not restrictDehu"
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "dXiAct",
                                                "rhs": {
                                                  "simple_expression": "Xi_outflow -sum(Xi_instream)"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "Xi_outflow",
                                                "rhs": {
                                                  "simple_expression": "Xi"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "mWat_flow",
                                                "rhs": {
                                                  "simple_expression": "m_flow_pos*(Xi -sum(Xi_instream))"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "else_equation": [
                                      {
                                        "if_equation": {
                                          "if_elseif": [
                                            {
                                              "condition": {
                                                "simple_expression": "restrictHumi and restrictDehu"
                                              },
                                              "then": [
                                                {
                                                  "equation": {
                                                    "assignment_equation": {
                                                      "lhs": "dXiAct",
                                                      "rhs": {
                                                        "simple_expression": {
                                                          "function_call": {
                                                            "name": "Buildings.Utilities.Math.Functions.smoothLimit",
                                                            "arguments": [
                                                              {
                                                                "name": "x=Xi -sum(Xi_instream),l=mWatMin_flow/m_flow_non_zero,u=mWatMax_flow/m_flow_non_zero,deltaX=deltaXi"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "condition": {
                                                "simple_expression": "restrictHumi"
                                              },
                                              "then": [
                                                {
                                                  "equation": {
                                                    "assignment_equation": {
                                                      "lhs": "dXiAct",
                                                      "rhs": {
                                                        "simple_expression": {
                                                          "function_call": {
                                                            "name": "Buildings.Utilities.Math.Functions.smoothMin",
                                                            "arguments": [
                                                              {
                                                                "name": "x1=Xi -sum(Xi_instream),x2=mWatMax_flow/m_flow_non_zero,deltaX=deltaXi"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ],
                                          "else_equation": [
                                            {
                                              "assignment_equation": {
                                                "lhs": "dXiAct",
                                                "rhs": {
                                                  "simple_expression": {
                                                    "function_call": {
                                                      "name": "Buildings.Utilities.Math.Functions.smoothMax",
                                                      "arguments": [
                                                        {
                                                          "name": "x1=Xi -sum(Xi_instream),x2=mWatMin_flow/m_flow_non_zero,deltaX=deltaXi"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "assignment_equation": {
                                          "lhs": "Xi_outflow",
                                          "rhs": {
                                            "simple_expression": "sum(Xi_instream) +dXiAct"
                                          }
                                        }
                                      },
                                      {
                                        "assignment_equation": {
                                          "lhs": "mWat_flow",
                                          "rhs": {
                                            "simple_expression": "m_flow_pos*dXiAct"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "port_b.Xi_outflow",
                                    "rhs": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "fill",
                                          "arguments": [
                                            {
                                              "name": "Xi_outflow"
                                            },
                                            {
                                              "name": "Medium.nXi"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "Xi_outflow",
                              "rhs": {
                                "simple_expression": {
                                  "function_call": {
                                    "name": "sum",
                                    "arguments": [
                                      {
                                        "name": "Xi_instream"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "mWat_flow",
                              "rhs": {
                                "simple_expression": "0"
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "dXiAct",
                              "rhs": {
                                "simple_expression": "0"
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "port_b.Xi_outflow",
                              "rhs": {
                                "simple_expression": "Xi_instream"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "use_TSet"
                            },
                            "then": [
                              {
                                "equation": {
                                  "if_equation": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": "not restrictHeat and not restrictCool"
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "dhAct",
                                                "rhs": {
                                                  "simple_expression": "0"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "port_b.h_outflow",
                                                "rhs": {
                                                  "simple_expression": "hSet"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "Q_flow",
                                                "rhs": {
                                                  "simple_expression": "m_flow_pos*(hSet -inStream(port_a.h_outflow))"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "else_equation": [
                                      {
                                        "if_equation": {
                                          "if_elseif": [
                                            {
                                              "condition": {
                                                "simple_expression": "restrictHeat and restrictCool"
                                              },
                                              "then": [
                                                {
                                                  "equation": {
                                                    "assignment_equation": {
                                                      "lhs": "dhAct",
                                                      "rhs": {
                                                        "simple_expression": {
                                                          "function_call": {
                                                            "name": "Buildings.Utilities.Math.Functions.smoothLimit",
                                                            "arguments": [
                                                              {
                                                                "name": "x=hSet -inStream(port_a.h_outflow),l=QMin_flow/m_flow_non_zero,u=QMax_flow/m_flow_non_zero,deltaX=deltaH"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "condition": {
                                                "simple_expression": "restrictHeat"
                                              },
                                              "then": [
                                                {
                                                  "equation": {
                                                    "assignment_equation": {
                                                      "lhs": "dhAct",
                                                      "rhs": {
                                                        "simple_expression": {
                                                          "function_call": {
                                                            "name": "Buildings.Utilities.Math.Functions.smoothMin",
                                                            "arguments": [
                                                              {
                                                                "name": "x1=hSet -inStream(port_a.h_outflow),x2=QMax_flow/m_flow_non_zero,deltaX=deltaH"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ],
                                          "else_equation": [
                                            {
                                              "assignment_equation": {
                                                "lhs": "dhAct",
                                                "rhs": {
                                                  "simple_expression": {
                                                    "function_call": {
                                                      "name": "Buildings.Utilities.Math.Functions.smoothMax",
                                                      "arguments": [
                                                        {
                                                          "name": "x1=hSet -inStream(port_a.h_outflow),x2=QMin_flow/m_flow_non_zero,deltaX=deltaH"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "assignment_equation": {
                                          "lhs": "port_b.h_outflow",
                                          "rhs": {
                                            "simple_expression": "inStream(port_a.h_outflow) +dhAct"
                                          }
                                        }
                                      },
                                      {
                                        "assignment_equation": {
                                          "lhs": "Q_flow",
                                          "rhs": {
                                            "simple_expression": "m_flow_pos*dhAct"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "port_b.h_outflow",
                              "rhs": {
                                "simple_expression": {
                                  "function_call": {
                                    "name": "inStream",
                                    "arguments": [
                                      {
                                        "name": "port_a.h_outflow"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "Q_flow",
                              "rhs": {
                                "simple_expression": "0"
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "dhAct",
                              "rhs": {
                                "simple_expression": "0"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "allowFlowReversal"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "port_a.h_outflow",
                                    "rhs": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "inStream",
                                          "arguments": [
                                            {
                                              "name": "port_b.h_outflow"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "port_a.Xi_outflow",
                                    "rhs": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "inStream",
                                          "arguments": [
                                            {
                                              "name": "port_b.Xi_outflow"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "port_a.C_outflow",
                                    "rhs": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "inStream",
                                          "arguments": [
                                            {
                                              "name": "port_b.C_outflow"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "port_a.h_outflow",
                              "rhs": {
                                "simple_expression": "Medium.h_default"
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "port_a.Xi_outflow",
                              "rhs": {
                                "simple_expression": "Medium.X_default[1:Medium.nXi]"
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "port_a.C_outflow",
                              "rhs": {
                                "simple_expression": {
                                  "function_call": {
                                    "name": "zeros",
                                    "arguments": [
                                      {
                                        "name": "Medium.nC"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "dp",
                        "rhs": {
                          "simple_expression": "0"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "port_a.m_flow +port_b.m_flow",
                        "rhs": {
                          "simple_expression": "0"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "port_b.C_outflow",
                        "rhs": {
                          "simple_expression": {
                            "function_call": {
                              "name": "inStream",
                              "arguments": [
                                {
                                  "name": "port_a.C_outflow"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "not allowFlowReversal"
                            },
                            "then": [
                              {
                                "equation": {
                                  "function_call_equation": {
                                    "function_name": "assert",
                                    "function_call_args": {
                                      "function_argument": {
                                        "expression": {
                                          "simple_expression": {
                                            "logical_expression": {
                                              "logical_or": [
                                                {
                                                  "logical_and": [
                                                    {
                                                      "arithmetic_expressions": [
                                                        {
                                                          "name": "m_flow"
                                                        },
                                                        {
                                                          "name": "-m_flow_small"
                                                        }
                                                      ],
                                                      "relation_operator": ">"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "function_arguments": {
                                        "function_argument": {
                                          "expression": {
                                            "simple_expression": "\"Reverting flow occurs even though allowFlowReversal is false\""
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "defaultComponentName",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "\"heaCoo\""
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Icon",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "coordinateSystem": {
                                "extent": [
                                  {
                                    "x": -100,
                                    "y": -100
                                  },
                                  {
                                    "x": 100,
                                    "y": 100
                                  }
                                ],
                                "preserveAspectRatio": "false"
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "graphics": [
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -99,
                                        "y": 6
                                      },
                                      {
                                        "x": 102,
                                        "y": -4
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "pattern": "LinePattern.None",
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 2,
                                        "y": -4
                                      },
                                      {
                                        "x": 102,
                                        "y": 6
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "pattern": "LinePattern.None",
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -98,
                                        "y": 64
                                      },
                                      {
                                        "x": -76,
                                        "y": 42
                                      }
                                    ],
                                    "textString": "\"X_w\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    },
                                    "visible": "use_X_wSet"
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 74,
                                        "y": 72
                                      },
                                      {
                                        "x": 120,
                                        "y": 44
                                      }
                                    ],
                                    "textString": "\"mWat_flow\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    }
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -70,
                                        "y": 60
                                      },
                                      {
                                        "x": 70,
                                        "y": -60
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 95,
                                      "g": 95,
                                      "b": 95
                                    },
                                    "pattern": "LinePattern.None",
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -64,
                                        "y": 34
                                      },
                                      {
                                        "x": -34,
                                        "y": 54
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "fillColor": {
                                      "r": 255,
                                      "g": 255,
                                      "b": 255
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -64,
                                        "y": 34
                                      },
                                      {
                                        "x": -52,
                                        "y": 44
                                      },
                                      {
                                        "x": -64,
                                        "y": 54
                                      }
                                    ],
                                    "color": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    }
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -70,
                                        "y": 60
                                      },
                                      {
                                        "x": -66,
                                        "y": 82
                                      }
                                    ],
                                    "visible": "use_TSet",
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    },
                                    "pattern": "LinePattern.None",
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 66,
                                        "y": 60
                                      },
                                      {
                                        "x": 70,
                                        "y": 82
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    },
                                    "pattern": "LinePattern.None",
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -106,
                                        "y": 102
                                      },
                                      {
                                        "x": -74,
                                        "y": 88
                                      }
                                    ],
                                    "textString": "\"T\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    },
                                    "visible": "use_TSet"
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -100,
                                        "y": 82
                                      },
                                      {
                                        "x": -70,
                                        "y": 78
                                      }
                                    ],
                                    "visible": "use_TSet",
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    },
                                    "pattern": "LinePattern.None",
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 72,
                                        "y": 108
                                      },
                                      {
                                        "x": 120,
                                        "y": 92
                                      }
                                    ],
                                    "textString": "\"Q_flow\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    }
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 70,
                                        "y": 82
                                      },
                                      {
                                        "x": 100,
                                        "y": 78
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    },
                                    "pattern": "LinePattern.None",
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -100,
                                        "y": 41
                                      },
                                      {
                                        "x": -70,
                                        "y": 38
                                      }
                                    ],
                                    "visible": "use_X_wSet",
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    },
                                    "pattern": "LinePattern.None",
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 70,
                                        "y": 41
                                      },
                                      {
                                        "x": 100,
                                        "y": 38
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    },
                                    "fillColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    },
                                    "pattern": "LinePattern.None",
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nThis model sets the temperature or the water vapor mass fraction\nof the medium that leaves <code>port_a</code>\nto the value given by the input <code>TSet</code> or <code>X_wSet</code>,\nsubject to optional limitations on the capacity\nfor heating and cooling, or limitations on the humidification or dehumidification\nmoisture mass flow rate.\nAlso, optionally the model allows to take into account first order dynamics.\n</p>\n<p>\nIf the parameters <code>energyDynamics</code> is not equal to\n<code>Modelica.Fluid.Types.Dynamics.SteadyState</code>,\nthe component models the dynamic response using a first order differential equation.\nThe time constant of the component is equal to the parameter <code>tau</code>.\nThis time constant is adjusted based on the mass flow rate using\n</p>\n<p align=\\\"center\\\" style=\\\"font-style:italic;\\\">\n&tau;<sub>eff</sub> = &tau; |m&#775;| &frasl; m&#775;<sub>nom</sub>\n</p>\n<p>\nwhere\n<i>&tau;<sub>eff</sub></i> is the effective time constant for the given mass flow rate\n<i>m&#775;</i> and\n<i>&tau;</i> is the time constant at the nominal mass flow rate\n<i>m&#775;<sub>nom</sub></i>.\nThis type of dynamics is equal to the dynamics that a completely mixed\ncontrol volume would have.\n</p>\n<p>\nThis model has no pressure drop.\nSee <a href=\\\"modelica://Buildings.Fluid.HeatExchangers.PrescribedOutlet\\\">\nBuildings.Fluid.HeatExchangers.PrescribedOutlet</a>\nfor a model that instantiates this model and that has a pressure drop.\n</p>\n<p>\nIn case of reverse flow,\nthe fluid that leaves <code>port_a</code> has the same\nproperties as the fluid that enters <code>port_b</code>.\n</p>\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nMarch 3, 2022, by Michael Wetter:<br/>\nRemoved <code>massDynamics</code>.<br/>\nThis is for\n<a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/1542\\\">issue 1542</a>.\n</li>\n<li>\nApril 29, 2021, by Michael Wetter:<br/>\nRemoved duplicate declaration of <code>m_flow_nominal</code> which is already\ndeclared in the base class.<br/>\n</li>\n<li>\nMarch 19, 2018, by Michael Wetter:<br/>\nAdded bugfix as the old model did not track <code>TSet</code> and <code>X_wSet</code>\nsimultaneously.<br/>\nThis is for\n<a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/893\\\">#893</a>.\n</li>\n<li>\nMay 3, 2017, by Michael Wetter:<br/>\nRefactored model to allow <code>X_wSet</code> as an input.<br/>\nThis is for\n<a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/763\\\">#763</a>.\n</li>\n<li>\nJanuary 26, 2016, by Michael Wetter:<br/>\nRemoved inequality comparison of real numbers in <code>restrictCool</code>\nand in <code>restrictHeat</code> as this is not allowed in Modelica.\n</li>\n<li>\nNovember 10, 2014, by Michael Wetter:<br/>\nFirst implementation.\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/Fluid/Interfaces/PrescribedOutlet.mo",
  "fullMoFilePath": "/home/reituag/gitrepo/modelica-buildings/Buildings/Fluid/Interfaces/PrescribedOutlet.mo",
  "checksum": "4b70e89f06543fa62c1fd35d6476f213"
}