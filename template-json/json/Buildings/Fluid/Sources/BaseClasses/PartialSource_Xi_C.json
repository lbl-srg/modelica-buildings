{
  "within": "Buildings.Fluid.Sources.BaseClasses",
  "class_definition": [
    {
      "class_prefixes": "partial model",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "PartialSource_Xi_C",
          "description_string": "Partial component source with parameter definitions for Xi and C",
          "composition": {
            "element_list": [
              {
                "extends_clause": {
                  "name": "Buildings.Fluid.Sources.BaseClasses.PartialSource"
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Boolean",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "use_X_in",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "false"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Get the composition (all fractions) from the input connector",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "tab",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Advanced\""
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Boolean",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "use_Xi_in",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "false"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Get the composition (independent fractions) from the input connector",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "group",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Conditional inputs\""
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Boolean",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "use_C_in",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "false"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Get the trace substances from the input connector",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Evaluate",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "group",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Conditional inputs\""
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Medium.MassFraction",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "X",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "Medium.nX"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "Medium.substanceNames"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": "Medium.X_default"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Fixed value of composition",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "enable",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": {
                                                "logical_expression": {
                                                  "logical_or": [
                                                    {
                                                      "logical_and": [
                                                        {
                                                          "arithmetic_expressions": [
                                                            {
                                                              "name": "Medium.nXi"
                                                            },
                                                            {
                                                              "name": "0"
                                                            }
                                                          ],
                                                          "relation_operator": ">"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "group",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Fixed inputs\""
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Medium.ExtraProperty",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "C",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "Medium.nC"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "Medium.extraPropertiesNames"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "function_call": {
                                "name": "fill",
                                "arguments": [
                                  {
                                    "name": "0"
                                  },
                                  {
                                    "name": "Medium.nC"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "description_string": "Fixed values of trace substances",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "Dialog",
                                "modification": {
                                  "class_modification": [
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "enable",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": {
                                                "logical_expression": {
                                                  "logical_or": [
                                                    {
                                                      "logical_and": [
                                                        {
                                                          "arithmetic_expressions": [
                                                            {
                                                              "name": "Medium.nC"
                                                            },
                                                            {
                                                              "name": "0"
                                                            }
                                                          ],
                                                          "relation_operator": ">"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "element_modification_or_replaceable": {
                                        "element_modification": {
                                          "name": "group",
                                          "modification": {
                                            "equal": true,
                                            "expression": {
                                              "simple_expression": "\"Fixed inputs\""
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "X_in",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "Medium.nX"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"kg/kg\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "Medium.substanceNames"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "condition_attribute": {
                        "expression": {
                          "simple_expression": "use_X_in"
                        }
                      },
                      "description": {
                        "description_string": "Prescribed boundary composition",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -60
                                      },
                                      {
                                        "x": -100,
                                        "y": -20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "Xi_in",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "Medium.nXi"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"kg/kg\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "Medium.substanceNames[1:Medium.nXi]"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "condition_attribute": {
                        "expression": {
                          "simple_expression": "use_Xi_in"
                        }
                      },
                      "description": {
                        "description_string": "Prescribed boundary composition",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -60
                                      },
                                      {
                                        "x": -100,
                                        "y": -20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "C_in",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "Medium.nC"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "Medium.extraPropertiesNames"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "condition_attribute": {
                        "expression": {
                          "simple_expression": "use_C_in"
                        }
                      },
                      "description": {
                        "description_string": "Prescribed boundary trace substances",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -100
                                      },
                                      {
                                        "x": -100,
                                        "y": -60
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "equation_section": {
                  "initial": true,
                  "equation": [
                    {
                      "function_call_equation": {
                        "function_name": "assert",
                        "function_call_args": {
                          "function_argument": {
                            "expression": {
                              "simple_expression": "not use_X_in or not use_Xi_in"
                            }
                          },
                          "function_arguments": {
                            "function_argument": {
                              "expression": {
                                "simple_expression": "\"Cannot use both X and Xi inputs, choose either use_X_in or use_Xi_in.\""
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "not use_X_in and not use_Xi_in"
                            },
                            "then": [
                              {
                                "equation": {
                                  "function_call_equation": {
                                    "function_name": "Modelica.Fluid.Utilities.checkBoundary",
                                    "function_call_args": {
                                      "function_argument": {
                                        "expression": {
                                          "simple_expression": "Medium.mediumName"
                                        }
                                      },
                                      "function_arguments": {
                                        "function_argument": {
                                          "expression": {
                                            "simple_expression": "Medium.substanceNames"
                                          }
                                        },
                                        "function_arguments": {
                                          "function_argument": {
                                            "expression": {
                                              "simple_expression": "Medium.singleState"
                                            }
                                          },
                                          "function_arguments": {
                                            "function_argument": {
                                              "expression": {
                                                "simple_expression": "true"
                                              }
                                            },
                                            "function_arguments": {
                                              "function_argument": {
                                                "expression": {
                                                  "simple_expression": "X_in_internal"
                                                }
                                              },
                                              "function_arguments": {
                                                "function_argument": {
                                                  "expression": {
                                                    "simple_expression": "\"Boundary_pT\""
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "equation_section": {
                  "equation": [
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "use_X_in or use_Xi_in"
                            },
                            "then": [
                              {
                                "equation": {
                                  "function_call_equation": {
                                    "function_name": "Modelica.Fluid.Utilities.checkBoundary",
                                    "function_call_args": {
                                      "function_argument": {
                                        "expression": {
                                          "simple_expression": "Medium.mediumName"
                                        }
                                      },
                                      "function_arguments": {
                                        "function_argument": {
                                          "expression": {
                                            "simple_expression": "Medium.substanceNames"
                                          }
                                        },
                                        "function_arguments": {
                                          "function_argument": {
                                            "expression": {
                                              "simple_expression": "Medium.singleState"
                                            }
                                          },
                                          "function_arguments": {
                                            "function_argument": {
                                              "expression": {
                                                "simple_expression": "true"
                                              }
                                            },
                                            "function_arguments": {
                                              "function_argument": {
                                                "expression": {
                                                  "simple_expression": "X_in_internal"
                                                }
                                              },
                                              "function_arguments": {
                                                "function_argument": {
                                                  "expression": {
                                                    "simple_expression": "\"Boundary_pT\""
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "connect_clause": {
                        "from": [
                          {
                            "dot_op": false,
                            "identifier": "X_in"
                          }
                        ],
                        "to": [
                          {
                            "dot_op": false,
                            "identifier": "X_in_internal"
                          }
                        ]
                      }
                    },
                    {
                      "connect_clause": {
                        "from": [
                          {
                            "dot_op": false,
                            "identifier": "Xi_in"
                          }
                        ],
                        "to": [
                          {
                            "dot_op": false,
                            "identifier": "Xi_in_internal"
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "use_Xi_in"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "X_in_internal[1:Medium.nXi]",
                                    "rhs": {
                                      "simple_expression": "Xi_in_internal[1:Medium.nXi]"
                                    }
                                  }
                                }
                              },
                              {
                                "equation": {
                                  "if_equation": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": "Medium.reducedX"
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "X_in_internal[Medium.nX]",
                                                "rhs": {
                                                  "simple_expression": "1 -sum(Xi_in_internal)"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "condition": {
                              "simple_expression": "use_X_in"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "X_in_internal[1:Medium.nXi]",
                                    "rhs": {
                                      "simple_expression": "Xi_in_internal[1:Medium.nXi]"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "X_in_internal",
                              "rhs": {
                                "simple_expression": "X"
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "Xi_in_internal",
                              "rhs": {
                                "simple_expression": "X[1:Medium.nXi]"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "connect_clause": {
                        "from": [
                          {
                            "dot_op": false,
                            "identifier": "C_in"
                          }
                        ],
                        "to": [
                          {
                            "dot_op": false,
                            "identifier": "C_in_internal"
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "not use_C_in"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "C_in_internal",
                                    "rhs": {
                                      "simple_expression": "C"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "for_equation": {
                        "for_indices": [
                          {
                            "identifier": "i",
                            "expression": {
                              "simple_expression": "1:nPorts"
                            }
                          }
                        ],
                        "loop_equations": [
                          {
                            "assignment_equation": {
                              "lhs": "ports[i].Xi_outflow",
                              "rhs": {
                                "simple_expression": "Xi_in_internal"
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "ports[i].C_outflow",
                              "rhs": {
                                "simple_expression": "C_in_internal"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Icon",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "coordinateSystem": {
                                "extent": [
                                  {
                                    "x": -100,
                                    "y": -100
                                  },
                                  {
                                    "x": 100,
                                    "y": 100
                                  }
                                ],
                                "preserveAspectRatio": "true"
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "graphics": [
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -164,
                                        "y": 4
                                      },
                                      {
                                        "x": -62,
                                        "y": -36
                                      }
                                    ],
                                    "textString": "\"X\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "visible": "use_X_in",
                                    "fillColor": {
                                      "r": 255,
                                      "g": 255,
                                      "b": 255
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -164,
                                        "y": 4
                                      },
                                      {
                                        "x": -62,
                                        "y": -36
                                      }
                                    ],
                                    "textString": "\"Xi\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "visible": "use_Xi_in",
                                    "fillColor": {
                                      "r": 255,
                                      "g": 255,
                                      "b": 255
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -164,
                                        "y": -90
                                      },
                                      {
                                        "x": -62,
                                        "y": -130
                                      }
                                    ],
                                    "textString": "\"C\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "visible": "use_C_in",
                                    "fillColor": {
                                      "r": 255,
                                      "g": 255,
                                      "b": 255
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nPartial model that defines outflowing properties\n<code>ports.Xi_outflow</code> and <code>ports.C_outflow</code>\nusing an optional input for both.\nOtherwise the parameter value is used.\n</p>\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nMarch 11, 2024, by Michael Wetter:<br/>\nCorrected use of <code>HideResult</code>.<br/>\nThis is for\n<a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/1850\\\">#1850</a>.\n</li>\n<li>\nSeptember 19, 2019, by Michael Wetter:<br/>\nRefactored handling of mass fractions which was needed to handle media such as\n<a href=\\\"modelica://Modelica.Media.IdealGases.MixtureGases.FlueGasSixComponents\\\">\nModelica.Media.IdealGases.MixtureGases.FlueGasSixComponents</a> and\n<a href=\\\"modelica://Modelica.Media.IdealGases.MixtureGases.SimpleNaturalGas\\\">\nModelica.Media.IdealGases.MixtureGases.SimpleNaturalGas</a>.<br/>\nThis is for\n<a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/1205\\\">IBPSA, #1205</a>.\n</li>\n<li>\nFebruary 13, 2018, by Michael Wetter:<br/>\nCorrected error in quantity assignment for <code>Xi_in</code>.\nThis is for\n<a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/882\\\">#882</a>.\n</li>\n<li>\nFebruary 2nd, 2018 by Filip Jorissen<br/>\nInitial version for refactoring inputs of sources.\nSee <a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/882\\\">#882</a>.\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/Fluid/Sources/BaseClasses/PartialSource_Xi_C.mo",
  "fullMoFilePath": "/home/reituag/gitrepo/modelica-buildings/Buildings/Fluid/Sources/BaseClasses/PartialSource_Xi_C.mo",
  "checksum": "4359fa1a6dcb22ff3129d4ca16cae059"
}