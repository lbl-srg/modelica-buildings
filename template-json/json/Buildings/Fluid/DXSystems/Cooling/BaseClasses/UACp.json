{
  "within": "Buildings.Fluid.DXSystems.Cooling.BaseClasses",
  "class_definition": [
    {
      "class_prefixes": "model",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "UACp",
          "description_string": "Calculates UA/Cp of the coil",
          "composition": {
            "element_list": [
              {
                "extends_clause": {
                  "name": "Modelica.Blocks.Icons.Block"
                }
              },
              {
                "component_clause": {
                  "type_prefix": "constant",
                  "type_specifier": "Boolean",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "homotopyInitialization",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "true"
                          }
                        }
                      },
                      "description": {
                        "description_string": "= true, use homotopy method",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "HideResult",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "replaceable": true,
                "constraining_clause": {
                  "name": "Modelica.Media.Interfaces.PartialCondensingGases"
                },
                "class_definition": {
                  "class_prefixes": "package",
                  "class_specifier": {
                    "short_class_specifier": {
                      "identifier": "Medium",
                      "value": {
                        "name": "Buildings.Media.Air"
                      }
                    }
                  }
                },
                "description": {
                  "description_string": "Medium model",
                  "annotation": [
                    {
                      "element_modification_or_replaceable": {
                        "element_modification": {
                          "name": "choicesAllMatching",
                          "modification": {
                            "equal": true,
                            "expression": {
                              "simple_expression": "true"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "replaceable": true,
                "constraining_clause": {
                  "name": "Buildings.Fluid.DXSystems.Cooling.AirSource.Data.Generic.BaseClasses.NominalValues"
                },
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Buildings.Fluid.DXSystems.Cooling.AirSource.Data.Generic.BaseClasses.NominalValues",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "per"
                      }
                    }
                  ]
                },
                "description": {
                  "description_string": "Performance data",
                  "annotation": [
                    {
                      "element_modification_or_replaceable": {
                        "element_modification": {
                          "name": "choicesAllMatching",
                          "modification": {
                            "equal": true,
                            "expression": {
                              "simple_expression": "true"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.MassFraction",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "XEvaIn_nominal",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "function_call": {
                                "name": "Buildings.Utilities.Psychrometrics.Functions.X_pSatpphi",
                                "arguments": [
                                  {
                                    "name": "pSat=Medium.saturationPressure(per.TEvaIn_nominal),p=per.p_nominal,phi=per.phiIn_nominal"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "description_string": "Rated/Nominal mass fraction of air entering coil"
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.SpecificEnthalpy",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "hEvaIn_nominal",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "function_call": {
                                "name": "Medium.specificEnthalpy_pTX",
                                "arguments": [
                                  {
                                    "name": "p=per.p_nominal,T=per.TEvaIn_nominal,X=cat(1,{XEvaIn_nominal},{1 -sum({XEvaIn_nominal})})"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "description_string": "Rated enthalpy of air entering cooling coil"
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.SpecificEnthalpy",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "hOut_nominal",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "hEvaIn_nominal +per.Q_flow_nominal/per.m_flow_nominal"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Rated enthalpy of air exiting cooling coil"
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.Temperature",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "TOut_nominal",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "per.TEvaIn_nominal +(per.SHR_nominal*per.Q_flow_nominal)/(per.m_flow_nominal*Cp_nominal)"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Dry-bulb temperature of the air leaving the cooling coil at nominal condition"
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.MassFraction",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "XEvaOut_nominal",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "start",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0.005"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "max",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "1"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": "XEvaIn_nominal +(hOut_nominal -hEvaIn_nominal)*(1 -per.SHR_nominal)/Medium.enthalpyOfCondensingGas(T=per.TEvaIn_nominal)"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Rated/Nominal mass fraction of air leaving the coil"
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.SpecificHeatCapacity",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "Cp_nominal",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "function_call": {
                                "name": "Medium.specificHeatCapacityCp",
                                "arguments": [
                                  {
                                    "name": "Medium.setState_pTX(p=per.p_nominal,T=per.TEvaIn_nominal,X=cat(1,{XEvaIn_nominal},{1 -sum({XEvaIn_nominal})}))"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "description_string": "Specific heat of air at specified nominal condition",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "name": "HideResult",
                                "modification": {
                                  "equal": true,
                                  "expression": {
                                    "simple_expression": "true"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.MassFraction",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "XADP_nominal",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "start",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0.008"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "max",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "1"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "fixed",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "false"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Rated/Nominal mass fraction of air at coil apparatus dew point"
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.Temperature",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "TADP_nominal",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "start",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "273.15 +10"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "fixed",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "false"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Coil apparatus dew point temperature"
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Modelica.Units.SI.SpecificEnthalpy",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "hADP_nominal",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "fixed",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "false"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Enthalpy of air at coil apparatus dew point (at rated condition)"
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Real",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "bypass_nominal",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "start",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0.25"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "max",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "1"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "fixed",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "false"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Bypass factor for nominal condition"
                      }
                    }
                  ]
                }
              },
              {
                "final": true,
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Real",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "UAcp",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"kg/s\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "fixed",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "false"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "UA/Cp of coil"
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "protected_element_list": [
                  {
                    "component_clause": {
                      "type_prefix": "constant",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "phiADP_nominal",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "1"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Realtive humidity at ADP"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Modelica.Units.SI.AbsolutePressure",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "psat_ADP_nominal",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "element_modification": {
                                      "name": "start",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "1250"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "element_modification_or_replaceable": {
                                    "element_modification": {
                                      "name": "fixed",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "false"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Saturation pressure"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "equation_section": {
                  "initial": true,
                  "equation": [
                    {
                      "assignment_equation": {
                        "lhs": "(XEvaIn_nominal -XEvaOut_nominal)*(per.TEvaIn_nominal -TADP_nominal)",
                        "rhs": {
                          "simple_expression": "(XEvaIn_nominal -XADP_nominal)*(per.TEvaIn_nominal -TOut_nominal)"
                        }
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "homotopyInitialization"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "psat_ADP_nominal",
                                    "rhs": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "homotopy",
                                          "arguments": [
                                            {
                                              "name": "actual=Buildings.Utilities.Psychrometrics.Functions.saturationPressureLiquid(TADP_nominal),simplified=1252.393 +83.933*(TADP_nominal -283.15)"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "psat_ADP_nominal",
                              "rhs": {
                                "simple_expression": {
                                  "function_call": {
                                    "name": "Buildings.Utilities.Psychrometrics.Functions.saturationPressureLiquid",
                                    "arguments": [
                                      {
                                        "name": "TADP_nominal"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "homotopyInitialization"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "XADP_nominal",
                                    "rhs": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "homotopy",
                                          "arguments": [
                                            {
                                              "name": "actual=Buildings.Utilities.Psychrometrics.Functions.X_pSatpphi(pSat=psat_ADP_nominal,p=per.p_nominal,phi=phiADP_nominal),simplified=0.007572544 +6.19495*(10^(-6))*(psat_ADP_nominal -1228)"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "XADP_nominal",
                              "rhs": {
                                "simple_expression": {
                                  "function_call": {
                                    "name": "Buildings.Utilities.Psychrometrics.Functions.X_pSatpphi",
                                    "arguments": [
                                      {
                                        "name": "pSat=psat_ADP_nominal,p=per.p_nominal,phi=phiADP_nominal"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "hADP_nominal",
                        "rhs": {
                          "simple_expression": {
                            "function_call": {
                              "name": "Medium.specificEnthalpy_pTX",
                              "arguments": [
                                {
                                  "name": "p=per.p_nominal,T=TADP_nominal,X=cat(1,{XADP_nominal},{1 -sum({XADP_nominal})})"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "bypass_nominal",
                        "rhs": {
                          "simple_expression": {
                            "function_call": {
                              "name": "Buildings.Utilities.Math.Functions.smoothLimit",
                              "arguments": [
                                {
                                  "name": "x=(hOut_nominal -hADP_nominal)/(hEvaIn_nominal -hADP_nominal),l=0.001,u=0.999,deltaX=0.0001"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "UAcp",
                        "rhs": {
                          "simple_expression": "-per.m_flow_nominal*Modelica.Math.log(bypass_nominal)"
                        }
                      }
                    },
                    {
                      "function_call_equation": {
                        "function_name": "assert",
                        "function_call_args": {
                          "function_argument": {
                            "expression": {
                              "simple_expression": "homotopyInitialization"
                            }
                          },
                          "function_arguments": {
                            "function_argument": {
                              "expression": {
                                "simple_expression": "\"In \" +getInstanceName() +\": The constant homotopyInitialization has been modified from its default value. This constant will be removed in future releases.\""
                              }
                            },
                            "function_arguments": {
                              "named_arguments": [
                                {
                                  "identifier": "level",
                                  "value": {
                                    "expression": {
                                      "simple_expression": "AssertionLevel.warning"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "defaultComponentName",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "\"uacp\""
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nThis model calculates the <i>UA/c<sub>p</sub></i> value and the bypass factor\nof the coil from the nominal inlet and outlet\nair properties.\n</p>\n<p>\nFor a heat exchanger where one medium changes phase, the <i>NTU-&epsilon;</i> relation\nis\n<p align=\\\"center\\\" style=\\\"font-style:italic;\\\">\n  &epsilon; = 1 - exp(-NTU) = 1-exp(-UA &frasl; c<sub>p</sub> &frasl; m&#775;).\n</p>\n<p>\nSince the bypass factor <i>b</i> is defined as <i>b=1-&epsilon;</i>,\none can write\n</p>\n<p align=\\\"center\\\" style=\\\"font-style:italic;\\\">\n  b = exp(-UA &frasl; c<sub>p</sub> &frasl; m&#775;)\n</p>\n<p>\nand, hence,\n<p align=\\\"center\\\" style=\\\"font-style:italic;\\\">\n UA &frasl; c<sub>p</sub> = - m&#775; log(b).\n</p>\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nNovember 11, 2020, by Michael Wetter:<br/>\nRefactored to integrate directly a base class that was used only once in the library.<br/>\nThis is for\n<a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/2229\\\">#2229</a>.\n</li>\n<li>\nApril 14, 2020, by Michael Wetter:<br/>\nChanged <code>homotopyInitialization</code> to a constant.<br/>\nThis is for\n<a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/1341\\\">IBPSA, #1341</a>.\n</li>\n<li>\nSeptember 21, 2012 by Michael Wetter:<br/>\nRevised implementation and documentation.\n</li>\n<li>\nApril 9, 2012 by Kaustubh Phalak:<br/>\nFirst implementation.\n</li>\n</ul>\n\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/Fluid/DXSystems/Cooling/BaseClasses/UACp.mo",
  "fullMoFilePath": "/home/reituag/gitrepo/modelica-buildings/Buildings/Fluid/DXSystems/Cooling/BaseClasses/UACp.mo",
  "checksum": "520b43360186ff47f169aa2d4e6b9bc6"
}