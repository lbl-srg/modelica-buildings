{
  "within": "Buildings.Fluid.Actuators.BaseClasses",
  "class_definition": [
    {
      "class_prefixes": "partial model",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "PartialTwoWayValveKv",
          "description_string": "Partial model for a two way valve using a Kv characteristic",
          "composition": {
            "element_list": [
              {
                "extends_clause": {
                  "name": "Buildings.Fluid.Actuators.BaseClasses.PartialTwoWayValve"
                }
              }
            ],
            "element_sections": [
              {
                "equation_section": {
                  "equation": [
                    {
                      "assignment_equation": {
                        "lhs": "kVal",
                        "rhs": {
                          "simple_expression": "phi*Kv_SI"
                        }
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "([object Object])"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "k",
                                    "rhs": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "sqrt",
                                          "arguments": [
                                            {
                                              "name": "1/(1/kFixed^2 +1/kVal^2)"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "k",
                              "rhs": {
                                "simple_expression": "kVal"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "linearized"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "m_flow*m_flow_nominal_pos",
                                    "rhs": {
                                      "simple_expression": "k^2*dp"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "if_equation": {
                              "if_elseif": [
                                {
                                  "condition": {
                                    "simple_expression": "homotopyInitialization"
                                  },
                                  "then": [
                                    {
                                      "equation": {
                                        "if_equation": {
                                          "if_elseif": [
                                            {
                                              "condition": {
                                                "simple_expression": "from_dp"
                                              },
                                              "then": [
                                                {
                                                  "equation": {
                                                    "assignment_equation": {
                                                      "lhs": "m_flow",
                                                      "rhs": {
                                                        "simple_expression": {
                                                          "function_call": {
                                                            "name": "homotopy",
                                                            "arguments": [
                                                              {
                                                                "name": "actual=Buildings.Fluid.BaseClasses.FlowModels.basicFlowFunction_dp(dp=dp,k=k,m_flow_turbulent=m_flow_turbulent),simplified=m_flow_nominal_pos*dp/dp_nominal_pos"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ],
                                          "else_equation": [
                                            {
                                              "assignment_equation": {
                                                "lhs": "dp",
                                                "rhs": {
                                                  "simple_expression": {
                                                    "function_call": {
                                                      "name": "homotopy",
                                                      "arguments": [
                                                        {
                                                          "name": "actual=Buildings.Fluid.BaseClasses.FlowModels.basicFlowFunction_m_flow(m_flow=m_flow,k=k,m_flow_turbulent=m_flow_turbulent),simplified=dp_nominal_pos*m_flow/m_flow_nominal_pos"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              ],
                              "else_equation": [
                                {
                                  "if_equation": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": "from_dp"
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "m_flow",
                                                "rhs": {
                                                  "simple_expression": {
                                                    "function_call": {
                                                      "name": "Buildings.Fluid.BaseClasses.FlowModels.basicFlowFunction_dp",
                                                      "arguments": [
                                                        {
                                                          "name": "dp=dp,k=k,m_flow_turbulent=m_flow_turbulent"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "else_equation": [
                                      {
                                        "assignment_equation": {
                                          "lhs": "dp",
                                          "rhs": {
                                            "simple_expression": {
                                              "function_call": {
                                                "name": "Buildings.Fluid.BaseClasses.FlowModels.basicFlowFunction_m_flow",
                                                "arguments": [
                                                  {
                                                    "name": "m_flow=m_flow,k=k,m_flow_turbulent=m_flow_turbulent"
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nPartial model for valves with different opening characteristics,\nsuch as linear, equal percentage or quick opening. This partial extends from\n<a href=\\\"modelica://Buildings.Fluid.Actuators.BaseClasses.PartialTwoWayValve\\\">\nBuildings.Fluid.Actuators.BaseClasses.PartialTwoWayValve</a>\nand also contains the governing equations for these three two way valve models.\n</p>\n<h4>Implementation</h4>\n<p>\nModels that extend this model need to provide a binding equation\nfor the flow function <code>phi</code>.\nAn example of such a code can be found in\n<a href=\\\"modelica://Buildings.Fluid.Actuators.Valves.TwoWayLinear\\\">\nBuildings.Fluid.Actuators.Valves.TwoWayLinear</a>.\n</p>\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nOctober 25, 2019, by Jianjun Hu:<br/>\nRemoved icon graphics annotation. This is for\n<a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/1225\\\">#1225</a>.\n</li>\n<li>\nMarch 24, 2017, by Michael Wetter:<br/>\nRenamed <code>filteredInput</code> to <code>use_inputFilter</code>.<br/>\nThis is for\n<a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/665\\\">#665</a>.\n</li>\n<li>\nJanuary 29, 2015 by Filip Jorissen:<br/>\nFirst implementation.\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/Fluid/Actuators/BaseClasses/PartialTwoWayValveKv.mo",
  "fullMoFilePath": "/home/reituag/gitrepo/modelica-buildings/Buildings/Fluid/Actuators/BaseClasses/PartialTwoWayValveKv.mo",
  "checksum": "f49096e9e5b5c3311ab393ca897497f2"
}